[{"C:\\GitHub\\react-popular-movies-app\\src\\index.js":"1","C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js":"2","C:\\GitHub\\react-popular-movies-app\\src\\App.js":"3","C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js":"4","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js":"5","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js":"6","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js":"7","C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js":"8","C:\\GitHub\\react-popular-movies-app\\src\\components\\PopularMovies.js":"9"},{"size":542,"mtime":1609069734440,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2740,"mtime":1609441561533,"results":"13","hashOfConfig":"11"},{"size":912,"mtime":1609440262784,"results":"14","hashOfConfig":"11"},{"size":5183,"mtime":1609438850530,"results":"15","hashOfConfig":"11"},{"size":96,"mtime":1609071984210,"results":"16","hashOfConfig":"11"},{"size":1521,"mtime":1609441550214,"results":"17","hashOfConfig":"11"},{"size":1316,"mtime":1609435790279,"results":"18","hashOfConfig":"11"},{"size":1438,"mtime":1609439234159,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vd1cui",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\GitHub\\react-popular-movies-app\\src\\index.js",[],["41","42"],"C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\App.js",["43"],"C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js",["44","45","46","47","48","49","50"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport MyContext from './myContext'\r\n\r\nfunction MovieDetails() {\r\n    const [movie,setMovie]= useState({});\r\n    const [cast,setCast]= useState([]);\r\n    const [genres,setGenres]= useState([]);\r\n    const [year,setYear]= useState('');\r\n    const [trailerKey,setTrailerKey]= useState('');\r\n    const [showTrailer,setShowTrailer]= useState(false);\r\n    const {id}= useParams()\r\n    const apiKey='fd2a4c25ac9eda692e330c4d102133e2'\r\n    \r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`)\r\n        setMovie(res.data);\r\n        setYear(res.data.release_date.slice(0,4));\r\n        setGenres(res.data.genres)\r\n\r\n    }, [])\r\n\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`);\r\n        setCast(res.data.cast.slice(0,5))\r\n    }, [])\r\n\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`);\r\n        if(res.data.results[0]){\r\n            setTrailerKey(res.data.results[0].key)\r\n        }\r\n        console.log(trailerKey);\r\n    }, [])\r\n\r\n    const trailer= (<iframe className='rounded-tl-3xl resize'  src={`https://www.youtube.com/embed/${trailerKey}`} frameborder=\"0\" width='100%' height='100%' allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>)\r\n        \r\n\r\n    return (\r\n        <MyContext.Consumer>\r\n        {\r\n      context=>(\r\n<div className='' style={{backgroundImage:`url(https://image.tmdb.org/t/p/w500/${movie.backdrop_path})`, backgroundPosition: 'center',\r\n  backgroundSize: 'cover',\r\n  backgroundRepeat: 'no-repeat',\r\n  \r\n  }}>\r\n      <div className='bg-gray-500 bg-opacity-70 pt-10 cursor-default '>\r\n          {/* <Image src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} className=' opacity-50 p-0  '  alt='movie'> */}\r\n              <div className=' text-gray-900 flex flex-warp '  >\r\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className=' w-1/5 h-full my-10 mx-3 shadow-2xl '   alt='movie'/>\r\n      {showTrailer? (<div className='w-screen h-screen bg-black bg-opacity-80 z-10 fixed '>\r\n                <div className=' inset-0 h-4/5 my-10  focus:outline-none'>\r\n                    <input type='button' className=' border-4 cursor-pointer bg-black bg-opacity-70 focus:outline-none absolute text-red-500 border-red-500 font-bold hover:text-red-400 hover:border-red-400  text-xl rounded-full px-3 pb-1 p-1 text-center pt-0 ' value='x' onClick={()=>setShowTrailer(false)}/>\r\n                    {trailer}\r\n                    </div>\r\n                    </div>)\r\n                    :null}\r\n                      \r\n                <div className='mt-10 bg-gradient-to-r from-gray-200 via-gray-300 h-3/4 to-transperent hover:from-gray-100 hover:via-gray-200 bg-opacity-10 hover:bg-opacity-40  p-7 w-2/3 '>\r\n                    <p className='text-4xl text-gray-900 font-extrabold font-sans mb-2 '> {movie.title} <p className='font-semibold text-2xl'>{year}</p></p>\r\n                    <div class=\"flex flex-warp divide-x-2 divide-black  w-1/2 -ml-3 mr-5  divide-opacity-40  mb-10 \">\r\n                        {genres.map(genre=><div className=' px-3 font-bold '>{genre.name}</div>)}\r\n                    </div>\r\n                    {trailerKey?\r\n                     <input type='button' value='trailer >' className='px-2 mb-5 rounded-full font-bold text-yellow-50 bg-red-700 pb-1 cursor-pointer hover:bg-red-600 text-center focus:outline-none' onClick={()=>setShowTrailer(true)}/>\r\n                     :null}\r\n                    {movie.overview?<p className='h-auto tracking-wide font-semibold text-sm max-w-xl '><header className='font-bold mb-2 text-2xl text-gray-800'>overview</header> {movie.overview}</p>:null}\r\n                </div>\r\n                \r\n            </div >\r\n            <div className='bg-gray-900 bg-opacity-50 mt-4'>\r\n                <p className=' bg-black bg-opacity-40 p-2 px-5 text-gray-400 font text-3xl  italic font-bold'>cast</p>\r\n                {/* <div className='font-mono font-bold italic text-white shadow-2xl text-3xl'>Actors</div> */}\r\n\r\n                   <div className='flex'>{cast.map(actor=> actor.profile_path?\r\n                  ( <span className='flex-none w-1/12 mx-3 mt-2 mb-5 opacity-80 text-transparent hover:text-gray-200 text-sm'>\r\n                        <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}  className=' opacity-70  hover:opacity-100  rounded shadow-2xl'   alt='actor'/>\r\n                         <p className='ml-3 text-xs'>{actor.name}</p>\r\n                    </span>)\r\n                        :null)}</div>\r\n            </div>\r\n            \r\n                   </div>\r\n            {/* </Image> */}\r\n                </div>\r\n                 )\r\n                }\r\n        \r\n          </MyContext.Consumer>\r\n          \r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\PopularMovies.js",["51","52","53"],"import React, {useState,useEffect} from 'react'\r\nimport MovieItem from './MovieItem'\r\nimport MyContext from './myContext'\r\n\r\nimport axios from 'axios'\r\n// PopularMovies component\r\n// holds the base to show the popular movies \r\n\r\nconst PopularMovies = (props) => {\r\n   \r\n  \r\n    \r\n    \r\n    return (<MyContext.Consumer>\r\n        {\r\n      context=>(\r\n        \r\n            <div className='bg-galaxy min-h-screen ' >\r\n                \r\n                <div className='uppercase fixed mt-14 cursor-default z-10 w-full text-center tracking-widest bg-black bg-opacity-80 font-thin  text-xl  pb-3' >\r\n                    <p className='text-red-500 '>{context.header}</p>\r\n            </div >\r\n                <div className='  flex flex-wrap justify-center  pt-20 px-2' >\r\n                    {context.items.map(item=><MovieItem  key={item.id} item={item}/>)\r\n                     }\r\n                </div>\r\n                {/* <div className='flex justify-center'>  \r\n                    <input type='button' value='load more'\r\n                     className='cursor-pointer w-1/2 h-14 mb-10 tracking-widest rounded opacity-70 bg-gray-700 text-gray-400 mt-1 uppercase hover:bg-gray-400 hover:text-gray-700 font-bold text-2xl focus:outline-none '\r\n                     onClick={()=>context.morePage()}/>\r\n                </div> */}\r\n        </div>\r\n         )\r\n        }\r\n\r\n  </MyContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default PopularMovies\r\n\r\n\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":13,"nodeType":"60","endLine":43,"endColumn":12},{"ruleId":"58","severity":1,"message":"59","line":16,"column":15,"nodeType":"60","endLine":22,"endColumn":6},{"ruleId":"58","severity":1,"message":"61","line":22,"column":8,"nodeType":"62","endLine":22,"endColumn":10,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"59","line":24,"column":15,"nodeType":"60","endLine":27,"endColumn":6},{"ruleId":"58","severity":1,"message":"61","line":27,"column":8,"nodeType":"62","endLine":27,"endColumn":10,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"59","line":29,"column":15,"nodeType":"60","endLine":35,"endColumn":6},{"ruleId":"58","severity":1,"message":"65","line":35,"column":8,"nodeType":"62","endLine":35,"endColumn":10,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":37,"column":21,"nodeType":"69","endLine":37,"endColumn":272},{"ruleId":"70","severity":1,"message":"71","line":1,"column":16,"nodeType":"72","messageId":"73","endLine":1,"endColumn":24},{"ruleId":"70","severity":1,"message":"74","line":1,"column":25,"nodeType":"72","messageId":"73","endLine":1,"endColumn":34},{"ruleId":"70","severity":1,"message":"75","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":13},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["78"],["79"],"React Hook useEffect has missing dependencies: 'id' and 'trailerKey'. Either include them or remove the dependency array.",["80"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [id]",{"range":"86","text":"87"},{"range":"88","text":"87"},"Update the dependencies array to be: [id, trailerKey]",{"range":"89","text":"90"},[824,826],"[id]",[1032,1034],[1327,1329],"[id, trailerKey]"]