[{"C:\\GitHub\\react-popular-movies-app\\src\\index.js":"1","C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js":"2","C:\\GitHub\\react-popular-movies-app\\src\\App.js":"3","C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js":"4","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js":"5","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js":"6","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js":"7","C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js":"8","C:\\GitHub\\react-popular-movies-app\\src\\components\\PopularMovies.js":"9","C:\\GitHub\\react-popular-movies-app\\src\\components\\ActorDetails.js":"10","C:\\GitHub\\react-popular-movies-app\\src\\components\\Genre.js":"11"},{"size":542,"mtime":1609069734440,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":3122,"mtime":1609951939560,"results":"15","hashOfConfig":"13"},{"size":1096,"mtime":1609958797465,"results":"16","hashOfConfig":"13"},{"size":5355,"mtime":1609958700147,"results":"17","hashOfConfig":"13"},{"size":96,"mtime":1609071984210,"results":"18","hashOfConfig":"13"},{"size":1471,"mtime":1609951472393,"results":"19","hashOfConfig":"13"},{"size":1265,"mtime":1609959051784,"results":"20","hashOfConfig":"13"},{"size":980,"mtime":1609956615643,"results":"21","hashOfConfig":"13"},{"size":2157,"mtime":1609916806594,"results":"22","hashOfConfig":"13"},{"size":1855,"mtime":1609954680813,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vd1cui",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\GitHub\\react-popular-movies-app\\src\\index.js",[],["49","50"],"C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\App.js",["51"],"C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js",["52","53","54","55","56","57","58"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport MyContext from './myContext'\r\n\r\nfunction MovieDetails() {\r\n    const [movie,setMovie]= useState({});\r\n    const [cast,setCast]= useState([]);\r\n    const [genres,setGenres]= useState([]);\r\n    const [year,setYear]= useState('');\r\n    const [trailerKey,setTrailerKey]= useState('');\r\n    const [showTrailer,setShowTrailer]= useState(false);\r\n    const {id}= useParams();\r\n    let history=useHistory();\r\n\r\n    const apiKey='fd2a4c25ac9eda692e330c4d102133e2';\r\n    //movie details\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`)\r\n        setMovie(res.data);\r\n        setYear(res.data.release_date.slice(0,4));\r\n        await setGenres(res.data.genres);\r\n        console.log(genres);\r\n\r\n    }, [])\r\n\r\n    //movie cast\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`);\r\n        setCast(res.data.cast.slice(0,5))\r\n    }, [])\r\n\r\n    //movie trailer\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`);\r\n        if(res.data.results[0]){\r\n            setTrailerKey(res.data.results[0].key)\r\n        }\r\n    }, [])\r\n\r\n    const trailer= (<iframe className='rounded-tl-3xl resize'  src={`https://www.youtube.com/embed/${trailerKey}`} frameborder=\"0\" width='100%' height='500' allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>)\r\n        \r\n\r\n    return (\r\n        <MyContext.Consumer>\r\n        {\r\n      context=>(\r\n<div className='' style={{backgroundImage:`url(https://image.tmdb.org/t/p/w500/${movie.backdrop_path})`, backgroundPosition: 'center',\r\n  backgroundSize: 'cover',\r\n  backgroundRepeat: 'no-repeat',\r\n  \r\n  }}>\r\n      <div className='bg-gray-500 bg-opacity-70 pt-8  cursor-default '>\r\n              <div className=' text-gray-900 flex flex-wrap justify-left pt-12'  >\r\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className='    w-72 h-96 shadow-2xl mr-10  '   alt='movie'/>\r\n      {showTrailer? (<div className='container bg-black bg-opacity-80 z-10 fixed '>\r\n                <div className=' inset-0 h-4/5 my-10  focus:outline-none'>\r\n                    <input type='button' className=' border-4 cursor-pointer bg-black bg-opacity-70 focus:outline-none absolute text-red-500 border-red-500 font-bold hover:text-red-400 hover:border-red-400  text-xl rounded-full px-3 pb-1 p-1 text-center pt-0 ' value='x' onClick={()=>setShowTrailer(false)}/>\r\n                    {trailer}\r\n                    </div>\r\n                    </div>)\r\n                    :null}\r\n                      \r\n                <div className=' bg-gradient-to-r from-gray-200 via-gray-300 h-3/4 to-transperent hover:from-gray-100 hover:via-gray-200 bg-opacity-10 hover:bg-opacity-40  pb-7 pt-3 px-5   '>\r\n                    <p className='text-4xl text-gray-900 font-bold font-sans mb-2 '> {movie.title} <p className='font-semibold text-2xl'>{year}</p></p>\r\n                    <div class=\"flex flex-warp divide-x-2 divide-black   -ml-3   divide-opacity-40 mb-10 \">\r\n                        {genres.map(genre=><p className='break-words px-3 font-bold cursor-pointer hover:text-yellow-600 ' \r\n                        onClick={()=>history.push(`/genre/${genre.id}/${genre.name}`)}>\r\n                            {genre.name}\r\n                            </p>)}\r\n                    </div>\r\n                    {trailerKey?\r\n                     <input type='button' value='trailer >' className='px-2 mb-5 rounded-full font-bold text-yellow-50 bg-red-700 pb-1 cursor-pointer hover:bg-red-600 text-center focus:outline-none' onClick={()=>setShowTrailer(true)}/>\r\n                     :null}\r\n                    {movie.overview?<p className='h-auto tracking-wide max-w-lg font-semibold text-sm  '><header className='font-bold mb-2 text-2xl text-gray-800'>overview</header> {movie.overview}</p>:null}\r\n                </div>\r\n                \r\n            </div >\r\n           {cast.length? <div className='bg-black bg-opacity-70 mt-4'>\r\n                <p className=' bg-black bg-opacity-40 p-2 px-5 text-gray-400 font text-3xl  italic font-bold'>cast</p>\r\n                   <div className='flex flex-warp' >\r\n                       {cast.map(actor=> actor.profile_path?\r\n                  ( <span className=' mx-2 w-40 mt-2 mb-5 opacity-80 text-transparent cursor-pointer hover:text-gray-200 text-sm'\r\n                       onClick={()=>history.push(`/actors/${actor.id}`)}>\r\n                        <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}  className=' opacity-70  hover:opacity-100  rounded shadow-2xl'   alt='actor'/>\r\n                         <p className='ml-3 text-xs'>{actor.name}</p>\r\n                    </span>)\r\n                        :null)}</div>\r\n            </div>:null}\r\n            \r\n                   </div>\r\n            {/* </Image> */}\r\n                </div>\r\n                 )\r\n                }\r\n        \r\n          </MyContext.Consumer>\r\n          \r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\PopularMovies.js",["59","60"],"C:\\GitHub\\react-popular-movies-app\\src\\components\\ActorDetails.js",["61","62","63","64","65"],"import React, {useState,useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport MovieItem from './MovieItem'\r\n\r\n//ActorDetails component\r\nfunction ActorDetails() {\r\n    const [actor,setActor]= useState({})\r\n    const [credits, setCredits] = useState([])\r\n    const {id} =useParams();\r\n    const apiKey='fd2a4c25ac9eda692e330c4d102133e2'\r\n\r\n    //getting the actor details\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/person/${id}?api_key=${apiKey}&language=en-US`)\r\n        console.log(res.data);\r\n        setActor(res.data);\r\n    }, [])\r\n\r\n    //getting The films in which the actor participated\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${apiKey}&language=en-US`)\r\n        console.log(res.data);\r\n        setCredits(res.data.cast);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=' bg-galaxy container'>\r\n            <div className='  flex flex-wrap justify-center pb-8 bg-white shadow-inner bg-opacity-80 pt-24 mx-10'>\r\n                <div className=' mx-10 w-60 '>\r\n                    <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} />\r\n                    <h1 className='font-bold text-3xl mt-3 mb-5'>{actor.name}</h1>\r\n                </div>\r\n                {actor.biography?\r\n                <div className='w-2/3 px-1'>\r\n                    <h1 className='font-bold text-lg mb-2'>biography</h1>\r\n                    <div className='' >{actor.biography}</div>\r\n                </div>:null}\r\n            </div>\r\n            <div className='uppercase cursor-default sticky top-14 z-10  w-full text-center tracking-widest bg-gray-900 bg-opacity-80 font-thin  text-xl   p-2' >\r\n                    <p className='text-gray-400'>movies <label className='text-red-500'>{actor.name}</label> played in</p>\r\n            </div >\r\n            <div className='  flex flex-wrap justify-center  ' >\r\n                {credits.map((item)=><MovieItem  key={item.id} item={item} />)}\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ActorDetails\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\Genre.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":20,"column":13,"nodeType":"74","endLine":44,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":18,"column":15,"nodeType":"74","endLine":25,"endColumn":6},{"ruleId":"72","severity":1,"message":"75","line":25,"column":8,"nodeType":"76","endLine":25,"endColumn":10,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"73","line":28,"column":15,"nodeType":"74","endLine":31,"endColumn":6},{"ruleId":"72","severity":1,"message":"78","line":31,"column":8,"nodeType":"76","endLine":31,"endColumn":10,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":34,"column":15,"nodeType":"74","endLine":39,"endColumn":6},{"ruleId":"72","severity":1,"message":"78","line":39,"column":8,"nodeType":"76","endLine":39,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":41,"column":21,"nodeType":"83","endLine":41,"endColumn":271},{"ruleId":"84","severity":1,"message":"85","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"88","line":1,"column":25,"nodeType":"86","messageId":"87","endLine":1,"endColumn":34},{"ruleId":"72","severity":1,"message":"73","line":14,"column":15,"nodeType":"74","endLine":18,"endColumn":6},{"ruleId":"72","severity":1,"message":"78","line":18,"column":8,"nodeType":"76","endLine":18,"endColumn":10,"suggestions":"89"},{"ruleId":"72","severity":1,"message":"73","line":21,"column":15,"nodeType":"74","endLine":25,"endColumn":6},{"ruleId":"72","severity":1,"message":"78","line":25,"column":8,"nodeType":"76","endLine":25,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":31,"column":21,"nodeType":"83","endLine":31,"endColumn":90},{"ruleId":"72","severity":1,"message":"73","line":14,"column":15,"nodeType":"74","endLine":17,"endColumn":6},{"ruleId":"72","severity":1,"message":"78","line":17,"column":8,"nodeType":"76","endLine":17,"endColumn":14,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'genres' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["97"],["98"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["99"],["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},{"desc":"104","fix":"107"},{"desc":"104","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [genres, id]",{"range":"111","text":"112"},"Update the dependencies array to be: [id]",{"range":"113","text":"114"},{"range":"115","text":"114"},{"range":"116","text":"114"},{"range":"117","text":"114"},"Update the dependencies array to be: [id, page]",{"range":"118","text":"119"},[923,925],"[genres, id]",[1149,1151],"[id]",[1431,1433],[631,633],[927,929],[607,613],"[id, page]"]