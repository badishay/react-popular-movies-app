[{"C:\\GitHub\\react-popular-movies-app\\src\\index.js":"1","C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js":"2","C:\\GitHub\\react-popular-movies-app\\src\\App.js":"3","C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js":"4","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js":"5","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js":"6","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js":"7","C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js":"8","C:\\GitHub\\react-popular-movies-app\\src\\components\\PopularMovies.js":"9","C:\\GitHub\\react-popular-movies-app\\src\\components\\ActorDetails.js":"10","C:\\GitHub\\react-popular-movies-app\\src\\components\\Genre.js":"11"},{"size":542,"mtime":1609069734440,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2804,"mtime":1609704194875,"results":"15","hashOfConfig":"13"},{"size":933,"mtime":1609746868195,"results":"16","hashOfConfig":"13"},{"size":5548,"mtime":1609704463984,"results":"17","hashOfConfig":"13"},{"size":96,"mtime":1609071984210,"results":"18","hashOfConfig":"13"},{"size":1481,"mtime":1609745225858,"results":"19","hashOfConfig":"13"},{"size":1316,"mtime":1609694037754,"results":"20","hashOfConfig":"13"},{"size":1423,"mtime":1609744978261,"results":"21","hashOfConfig":"13"},{"size":2111,"mtime":1609747307113,"results":"22","hashOfConfig":"13"},{"size":1628,"mtime":1609747568916,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vd1cui",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"C:\\GitHub\\react-popular-movies-app\\src\\index.js",[],["54","55"],"C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\App.js",["56"],"import './App.css';\nimport {Switch, Route, useHistory} from 'react-router-dom'\nimport React, {useState,useEffect} from 'react'\nimport Navbar from './components/Navbar'\nimport PopularMovies from './components/PopularMovies'\nimport MovieDetails from './components/MovieDetails'\nimport MyContext from './components/myContext'\nimport ActorDetails from'./components/ActorDetails'\nimport Genre from './components/Genre'\n\nimport axios from 'axios'\nfunction App() {\n  const [searchText,setSearchText] = useState('');\n  const [items,setItems] =useState([]);\n  const [page,setPage] = useState(1);\n  const [header,setHeader] = useState('popular movies');\n \n  let history=useHistory()\n  \n  useEffect(async() => {\n      const apiKey='fd2a4c25ac9eda692e330c4d102133e2'\n      const popular= await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${page}`);\n      if(searchText){\n        setPage(1);\n        const find= await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchText.replace(' ','+')}&language=en-US`);\n        setItems([...find.data.results]);\n        console.log(find.data.results);\n        if(find.data.results.length){\n          setHeader('search results');\n        }\n        else{\n          setHeader('no results :(');\n        }\n    }\n    else{\n      if(page===1){//if the page restart to 1 because we return fron search\n        setItems([...popular.data.results])\n      }\n      else{\n        setItems(oldItems => [...oldItems,...popular.data.results])\n      }\n      setHeader('popular movies');\n\n    }\n          }, [searchText,page])\n  \n\n\n  useEffect(() => {\n    window.addEventListener('scroll',(e) => {\n        const bottom = e.target.documentElement.scrollHeight - e.target.documentElement.scrollTop === e.target.documentElement.clientHeight;\n        if (bottom){\n          setPage(prev=>prev+1);\n        }\n      })\n}, []) \n  \n  return (\n    \n      <MyContext.Provider value={{\n        text:searchText, \n        callback:(text)=>{\n          history.push('/')\n          setSearchText(text)},\n        restart:()=>{\n           setPage(1)\n          setSearchText('');\n          },\n        items: items,\n        header:header,\n        page:page,\n        morePage:()=>setPage(prev=>prev+1)}}>\n    <div>\n     <Navbar />\n\n     <Switch  style={{width:'100%', height:'100%'}} >\n          <Route  path='/movies/:id' >\n              <MovieDetails/>\n          </Route>\n\n          <Route  path='/actors/:id' >\n              <ActorDetails/>\n          </Route>\n\n          <Route  path='/genre/:id/:name' >\n              <Genre/>\n          </Route>\n\n          <Route path='/'>\n            <PopularMovies text={searchText}/> \n          </Route>\n        \n        </Switch>\n    </div>\n    </MyContext.Provider>\n\n  );\n}\n\nexport default App;","C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js",["57","58","59","60","61","62","63"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport MyContext from './myContext'\r\n\r\nfunction MovieDetails() {\r\n    const [movie,setMovie]= useState({});\r\n    const [cast,setCast]= useState([]);\r\n    const [genres,setGenres]= useState([]);\r\n    const [year,setYear]= useState('');\r\n    const [trailerKey,setTrailerKey]= useState('');\r\n    const [showTrailer,setShowTrailer]= useState(false);\r\n    const {id}= useParams();\r\n    let history=useHistory();\r\n\r\n    const apiKey='fd2a4c25ac9eda692e330c4d102133e2';\r\n    //movie details\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`)\r\n        setMovie(res.data);\r\n        setYear(res.data.release_date.slice(0,4));\r\n        await setGenres(res.data.genres);\r\n        console.log(genres);\r\n\r\n    }, [])\r\n\r\n    //movie cast\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`);\r\n        setCast(res.data.cast.slice(0,5))\r\n    }, [])\r\n\r\n    //movie trailer\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`);\r\n        if(res.data.results[0]){\r\n            setTrailerKey(res.data.results[0].key)\r\n        }\r\n        // console.log(trailerKey);\r\n    }, [])\r\n\r\n    const trailer= (<iframe className='rounded-tl-3xl resize'  src={`https://www.youtube.com/embed/${trailerKey}`} frameborder=\"0\" width='100%' height='500' allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>)\r\n        \r\n\r\n    return (\r\n        <MyContext.Consumer>\r\n        {\r\n      context=>(\r\n<div className='' style={{backgroundImage:`url(https://image.tmdb.org/t/p/w500/${movie.backdrop_path})`, backgroundPosition: 'center',\r\n  backgroundSize: 'cover',\r\n  backgroundRepeat: 'no-repeat',\r\n  \r\n  }}>\r\n      <div className='bg-gray-500 bg-opacity-70 pt-10 cursor-default '>\r\n          {/* <Image src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} className=' opacity-50 p-0  '  alt='movie'> */}\r\n              <div className=' text-gray-900 flex flex-wrap  '  >\r\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className='  mt-10  w-72 h-96 shadow-2xl mx-10 '   alt='movie'/>\r\n      {showTrailer? (<div className='container bg-black bg-opacity-80 z-10 fixed '>\r\n                <div className=' inset-0 h-4/5 my-10  focus:outline-none'>\r\n                    <input type='button' className=' border-4 cursor-pointer bg-black bg-opacity-70 focus:outline-none absolute text-red-500 border-red-500 font-bold hover:text-red-400 hover:border-red-400  text-xl rounded-full px-3 pb-1 p-1 text-center pt-0 ' value='x' onClick={()=>setShowTrailer(false)}/>\r\n                    {trailer}\r\n                    </div>\r\n                    </div>)\r\n                    :null}\r\n                      \r\n                <div className='mt-10 bg-gradient-to-r from-gray-200 via-gray-300 h-3/4 to-transperent hover:from-gray-100 hover:via-gray-200 bg-opacity-10 hover:bg-opacity-40  p-7 w-96 '>\r\n                    <p className='text-4xl text-gray-900 font-extrabold font-sans mb-2 '> {movie.title} <p className='font-semibold text-2xl'>{year}</p></p>\r\n                    <div class=\"flex flex-warp divide-x-2 divide-black  w-1/2 -ml-3 mr-5  divide-opacity-40 mb-10 \">\r\n                        {genres.map(genre=><p className='break-words px-3 font-bold cursor-pointer hover:text-yellow-600 ' \r\n                        onClick={()=>history.push(`/genre/${genre.id}/${genre.name}`)}\r\n                        >\r\n                            {genre.name}\r\n                            </p>)}\r\n                    </div>\r\n                    {trailerKey?\r\n                     <input type='button' value='trailer >' className='px-2 mb-5 rounded-full font-bold text-yellow-50 bg-red-700 pb-1 cursor-pointer hover:bg-red-600 text-center focus:outline-none' onClick={()=>setShowTrailer(true)}/>\r\n                     :null}\r\n                    {movie.overview?<p className='h-auto tracking-wide font-semibold text-sm max-w-xl '><header className='font-bold mb-2 text-2xl text-gray-800'>overview</header> {movie.overview}</p>:null}\r\n                </div>\r\n                \r\n            </div >\r\n           {cast.length? <div className='bg-black bg-opacity-70 mt-4'>\r\n                <p className=' bg-black bg-opacity-40 p-2 px-5 text-gray-400 font text-3xl  italic font-bold'>cast</p>\r\n                   <div className='flex flex-warp' >\r\n                       {cast.map(actor=> actor.profile_path?\r\n                  ( <span className=' mx-2 w-40 mt-2 mb-5 opacity-80 text-transparent cursor-pointer hover:text-gray-200 text-sm'\r\n                       onClick={()=>history.push(`/actors/${actor.id}`)}>\r\n                        <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}  className=' opacity-70  hover:opacity-100  rounded shadow-2xl'   alt='actor'/>\r\n                         <p className='ml-3 text-xs'>{actor.name}</p>\r\n                    </span>)\r\n                        :null)}</div>\r\n            </div>:null}\r\n            \r\n                   </div>\r\n            {/* </Image> */}\r\n                </div>\r\n                 )\r\n                }\r\n        \r\n          </MyContext.Consumer>\r\n          \r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js",["64"],"import React,{useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport MyContext from './myContext'\r\n\r\nconst MovieItem = (props) => {\r\n    const [title, setTitle]= useState(false);\r\n     let history=useHistory();\r\n\r\n     \r\n    return (\r\n\r\n        <MyContext.Consumer>\r\n        {\r\n      context=>(\r\n        <div>\r\n        {props.item.poster_path?(<div className=' my-4 mx-2 w-48 h-72 bg-scroll transition duration-500  transform hover:-translate-y-1 hover:scale-110 cursor-pointer  bg-gray-600 ease-in-out   rounded-lg  p-1/2 shadow-md content-center'\r\n        style={{backgroundImage:`url(https://image.tmdb.org/t/p/w500/${props.item.poster_path})`, backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        \r\n        }} onMouseEnter={()=>setTitle(true)} onMouseLeave={()=>setTitle(false)} \r\n        onClick={()=>{\r\n          history.push(`/movies/${props.item.id}`);\r\n          }}>\r\n       \r\n            {title?<div className='absolute inset-x-0 bottom-0 text-left h-1/5 bg-black bg-opacity-80 border-b rounded-b-lg border-gray-300 '>\r\n                        <p className=' text-gray-200 absolute ml-1 font-bold  text-sm pt-3 p-1' >{`${props.item.title} (${props.item.release_date.slice(0,4)})`}</p>\r\n                     </div>\r\n               :null}            \r\n     </div>):null} \r\n     \r\n     </div> \r\n         )\r\n        }\r\n  </MyContext.Consumer>\r\n      )\r\n}\r\n\r\nexport default MovieItem\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js",[],["65","66"],"C:\\GitHub\\react-popular-movies-app\\src\\components\\PopularMovies.js",["67","68"],"import React, {useState,useEffect} from 'react'\r\nimport MovieItem from './MovieItem'\r\nimport MyContext from './myContext'\r\n\r\n// PopularMovies component\r\n// holds the base to show the popular movies \r\n\r\nconst PopularMovies = (props) => {\r\n   \r\n  \r\n    \r\n    \r\n    return (<MyContext.Consumer>\r\n        {\r\n      context=>(\r\n        \r\n            <div className='bg-galaxy min-h-screen ' >\r\n                \r\n                <div className='uppercase fixed mt-14 cursor-default z-10 w-full text-center tracking-widest bg-black bg-opacity-80 font-thin  text-xl  ' >\r\n                    <p className='text-red-500 '>{context.header}</p>\r\n            </div >\r\n                <div className='  flex flex-wrap justify-center  pt-20 ' >\r\n                    {context.items.map((item,index)=><MovieItem  key={item.id} item={item} id={index} />)\r\n                     }\r\n                </div>\r\n                {/* <div className='flex justify-center'>  \r\n                    <input type='button' value='load more'\r\n                     className='cursor-pointer w-1/2 h-14 mb-10 tracking-widest rounded opacity-70 bg-gray-700 text-gray-400 mt-1 uppercase hover:bg-gray-400 hover:text-gray-700 font-bold text-2xl focus:outline-none '\r\n                     onClick={()=>context.morePage()}/>\r\n                </div> */}\r\n        </div>\r\n         )\r\n        }\r\n\r\n  </MyContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default PopularMovies\r\n\r\n\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\ActorDetails.js",["69","70","71","72","73"],"import React, {useState,useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport MovieItem from './MovieItem'\r\n\r\n\r\nfunction ActorDetails() {\r\n    const [actor,setActor]= useState({})\r\n    const [credits, setCredits] = useState([])\r\n    const {id} =useParams()\r\n    const apiKey='fd2a4c25ac9eda692e330c4d102133e2'\r\n    const date =new Date();\r\n    console.log(date.toLocaleDateString());\r\n\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/person/${id}?api_key=${apiKey}&language=en-US`)\r\n        console.log(res.data);\r\n        setActor(res.data);\r\n    }, [])\r\n    \r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${apiKey}&language=en-US`)\r\n        console.log(res.data);\r\n        setCredits(res.data.cast);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=' bg-galaxy container'>\r\n            <div className='  flex flex-wrap justify-center pb-8 bg-white shadow-inner bg-opacity-80 pt-24 mx-10'>\r\n                <div className=' mx-10 w-60 '>\r\n                    <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} />\r\n                    <h1 className='font-bold text-3xl mt-3 mb-5'>{actor.name}</h1>\r\n                </div>\r\n                {actor.biography?<div className='w-2/3 px-1'>\r\n                    <h1 className='font-bold text-lg mb-2'>biography</h1>\r\n                    <div className='' >{actor.biography}</div>\r\n                </div>:null}\r\n           </div>\r\n           <div className='uppercase cursor-default sticky top-14 z-10  w-full text-center tracking-widest bg-gray-900 bg-opacity-80 font-thin  text-xl   p-2' >\r\n                    <p className='text-gray-400'>movies <label className='text-red-500'>{actor.name}</label> played in</p>\r\n            </div >\r\n           <div className='  flex flex-wrap justify-center  ' >\r\n                    {credits.map((item)=><MovieItem  key={item.id} item={item} />)}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActorDetails\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\Genre.js",["74","75"],"import React, {useState,useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport MovieItem from './MovieItem'\r\n\r\n\r\n\r\nfunction Genre() {\r\n    const {id,name}= useParams();\r\n    const apiKey='fd2a4c25ac9eda692e330c4d102133e2';\r\n    const [movies, setMovies] = useState([])\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&with_genres=${id}&language=en-US&page=${page}`);\r\n        await setMovies(prev=>[...prev,...res.data.results])\r\n    }, [page])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll',(e) => {\r\n            const bottom = e.target.documentElement.scrollHeight - e.target.documentElement.scrollTop === e.target.documentElement.clientHeight;\r\n            // console.log(Math.round( e.target.documentElement.scrollHeight - e.target.documentElement.scrollTop),e.target.documentElement.clientHeight);\r\n             console.log(bottom);\r\n            if (bottom){\r\n              setPage(prev=>prev+1);\r\n            }\r\n          })\r\n    }, []) \r\n\r\n    return (\r\n        <div className='bg-galaxy'>\r\n            <div className='uppercase fixed mt-14 cursor-default z-10 w-full text-center tracking-widest bg-black bg-opacity-80 font-thin  text-xl  pb-3' >\r\n                    <p className='text-red-500 '>{name}</p>\r\n            </div >\r\n        <div className='  flex flex-wrap pt-20'>\r\n           {movies.map((item)=><MovieItem  key={item.id} item={item} />)}\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Genre\r\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":20,"column":13,"nodeType":"82","endLine":45,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":18,"column":15,"nodeType":"82","endLine":25,"endColumn":6},{"ruleId":"80","severity":1,"message":"83","line":25,"column":8,"nodeType":"84","endLine":25,"endColumn":10,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"81","line":28,"column":15,"nodeType":"82","endLine":31,"endColumn":6},{"ruleId":"80","severity":1,"message":"86","line":31,"column":8,"nodeType":"84","endLine":31,"endColumn":10,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"81","line":34,"column":15,"nodeType":"82","endLine":40,"endColumn":6},{"ruleId":"80","severity":1,"message":"86","line":40,"column":8,"nodeType":"84","endLine":40,"endColumn":10,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":42,"column":21,"nodeType":"91","endLine":42,"endColumn":271},{"ruleId":"92","severity":1,"message":"93","line":1,"column":24,"nodeType":"94","messageId":"95","endLine":1,"endColumn":33},{"ruleId":"76","replacedBy":"96"},{"ruleId":"78","replacedBy":"97"},{"ruleId":"92","severity":1,"message":"98","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":1,"column":25,"nodeType":"94","messageId":"95","endLine":1,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":15,"column":15,"nodeType":"82","endLine":19,"endColumn":6},{"ruleId":"80","severity":1,"message":"86","line":19,"column":8,"nodeType":"84","endLine":19,"endColumn":10,"suggestions":"99"},{"ruleId":"80","severity":1,"message":"81","line":21,"column":15,"nodeType":"82","endLine":25,"endColumn":6},{"ruleId":"80","severity":1,"message":"86","line":25,"column":8,"nodeType":"84","endLine":25,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":31,"column":21,"nodeType":"91","endLine":31,"endColumn":90},{"ruleId":"80","severity":1,"message":"81","line":14,"column":15,"nodeType":"82","endLine":17,"endColumn":6},{"ruleId":"80","severity":1,"message":"86","line":17,"column":8,"nodeType":"84","endLine":17,"endColumn":14,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'genres' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["107"],["108"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["104"],["105"],"'useState' is defined but never used.",["109"],["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"114","fix":"117"},{"desc":"114","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [genres, id]",{"range":"121","text":"122"},"Update the dependencies array to be: [id]",{"range":"123","text":"124"},{"range":"125","text":"124"},{"range":"126","text":"124"},{"range":"127","text":"124"},"Update the dependencies array to be: [id, page]",{"range":"128","text":"129"},[923,925],"[genres, id]",[1149,1151],"[id]",[1468,1470],[647,649],[890,892],[607,613],"[id, page]"]