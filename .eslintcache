[{"C:\\GitHub\\react-popular-movies-app\\src\\index.js":"1","C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js":"2","C:\\GitHub\\react-popular-movies-app\\src\\App.js":"3","C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js":"4","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js":"5","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js":"6","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js":"7","C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js":"8","C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieList.js":"9"},{"size":542,"mtime":1609069734440,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":559,"mtime":1609073151501,"results":"13","hashOfConfig":"11"},{"size":728,"mtime":1609072004234,"results":"14","hashOfConfig":"11"},{"size":4197,"mtime":1609072354264,"results":"15","hashOfConfig":"11"},{"size":96,"mtime":1609071984210,"results":"16","hashOfConfig":"11"},{"size":1619,"mtime":1609071953618,"results":"17","hashOfConfig":"11"},{"size":811,"mtime":1609072029976,"results":"18","hashOfConfig":"11"},{"size":1168,"mtime":1609072314745,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vd1cui",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\GitHub\\react-popular-movies-app\\src\\index.js",[],["42","43"],"C:\\GitHub\\react-popular-movies-app\\src\\reportWebVitals.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\App.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\Navbar.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieDetails.js",["44","45","46","47","48","49","50"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nfunction MovieDetails() {\r\n    const [movie,setMovie]= useState({});\r\n    const [cast,setCast]= useState([]);\r\n    const [genres,setGenres]= useState([]);\r\n    const [year,setYear]= useState('');\r\n    const [trailerKey,setTrailerKey]= useState('');\r\n    const {id}= useParams()\r\n    const apiKey='fd2a4c25ac9eda692e330c4d102133e2'\r\n    \r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`)\r\n        setMovie(res.data);\r\n        setYear(res.data.release_date.slice(0,4));\r\n        setGenres(res.data.genres)\r\n\r\n    }, [])\r\n\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`);\r\n        setCast(res.data.cast.slice(0,5))\r\n    }, [])\r\n\r\n    useEffect(async() => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`);\r\n        if(res.data.results[0]){\r\n            setTrailerKey(res.data.results[0].key)\r\n        }\r\n        console.log(trailerKey);\r\n    }, [])\r\n\r\n    return (\r\n<div className=' h-full flex flex-col' style={{backgroundImage:`url(https://image.tmdb.org/t/p/w500/${movie.backdrop_path})`, backgroundPosition: 'center',\r\n  backgroundSize: 'cover',\r\n  backgroundRepeat: 'no-repeat',\r\n  \r\n  }}>\r\n      <div className='bg-gray-500 bg-opacity-70'>\r\n          {/* <Image src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} className=' opacity-50 p-0  '  alt='movie'> */}\r\n              <div className=' text-gray-900  flex flex-row '  >\r\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className=' w-1/5 h-full m-10 mt-10 shadow-2xl '   alt='movie'/>\r\n                <div className='mt-10 bg-gradient-to-r from-gray-200 via-gray-300 to-transperent hover:from-gray-100 hover:via-gray-200 bg-opacity-10 hover:bg-opacity-40  p-7 w-2/5 h-1/2'>\r\n                    <p className='text-4xl text-gray-900 font-extrabold font-sans mb-2 '> {movie.title} <p className='font-normal text-2xl'>{year}</p></p>\r\n                    <div class=\"flex flex-warp divide-x-2 divide-black ml-0  divide-opacity-40  mb-10 \">\r\n                        {genres.map(genre=><div className=' px-3 font-bold'>{genre.name}</div>)}\r\n                    </div>\r\n                    {movie.overview?<p className='h-auto  tracking-wide font-semibold text-sm'><header className='font-bold mb-2 text-2xl'>overview</header> {movie.overview}</p>:null}\r\n                    \r\n                {/* <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} className='opacity-30 w-3/4 '  alt='movie'/> */}\r\n                </div>\r\n                {/* <iframe src={`https://youtu.be/${trailerKey}`}/> */}\r\n                {trailerKey?\r\n                    <iframe className='my-10 ml-10 mr-0 opacity-60 rounded w-80 h-64 hover:opacity-100 hover:scale-150 hover:-translate-x-32 hover:translate-y-10 delay-150 duration-300 transform  '   src={`https://www.youtube.com/embed/${trailerKey}`} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                    :null}\r\n            </div >\r\n            <div className=' flex  bg-gray-900 bg-opacity-50 '>\r\n                {/* <div className='font-mono font-bold italic text-white shadow-2xl text-3xl'>Actors</div> */}\r\n                   {cast.map(actor=> actor.profile_path?\r\n                  ( <span className='flex-none w-1/12 m-5 opacity-70 text-transparent hover:text-gray-200 text-sm'>\r\n                        <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}  className=' opacity-70  mx-3 hover:opacity-95  rounded-lg shadow-2xl'   alt='actor'/>\r\n                         <p className='ml-3'>{actor.name}</p>\r\n                    </span>)\r\n                        :null)}\r\n            </div>\r\n            \r\n                   </div>\r\n            {/* </Image> */}\r\n                </div>\r\n          \r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\myContext.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieItem.js",["51","52"],"import React,{useState} from 'react'\r\nimport {Switch, Route, useHistory} from 'react-router-dom'\r\n\r\nconst MovieItem = (props) => {\r\n    const [title, setTitle]= useState(false);\r\n     let history=useHistory()\r\n    \r\n    // const apiKey='fd2a4c25ac9eda692e330c4d102133e2'\r\n    const getMovieDetails=()=>{\r\n        // const res = await axios.get(`https://api.themoviedb.org/3/movie/${props.item.id}?api_key=${apiKey}&language=en-US`)\r\n        history.push(`/movies/${props.item.id}`)\r\n        // console.log(res);\r\n        // <input type='button' value='movie' style={{width:'100%', height:'10vh'}} onClick={()=>history.push('/movies/3')}></input>\r\n    }\r\n    return (\r\n        \r\n        <div className='transition duration-500  transform hover:-translate-y-1 hover:scale-110 cursor-pointer  box-border w-40 h-auto bg-opacity-40 bg-gray-600 ease-in-out hover:border-gray-300 border-transparent  hover:bg-gray-300 hover: rounded-md my-6 mx-2 p-1/2 border-2 shadow-md content-center'\r\n         onMouseEnter={()=>setTitle(true)} onMouseLeave={()=>setTitle(false)} onClick={getMovieDetails} >\r\n           {props.item.poster_path? <img  className=' rounded-md w-max hover:text-white' src={`https://image.tmdb.org/t/p/w500/${props.item.poster_path}`} alt='movie'/>:null}\r\n            {title?<div className='relative text-left'>\r\n                        <label className=' text-gray-300 absolute ml-1 font-bold  text-xs p-1 ' >{`${props.item.title} (${props.item.release_date.slice(0,4)})`}</label>\r\n                     </div>\r\n               :null}            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","C:\\GitHub\\react-popular-movies-app\\src\\components\\Searchbar.js",[],"C:\\GitHub\\react-popular-movies-app\\src\\components\\MovieList.js",["53","54","55"],"import React, {useState,useEffect} from 'react'\r\nimport MovieItem from './MovieItem'\r\nimport MyContext from './myContext'\r\n\r\nimport axios from 'axios'\r\n// MovieList component\r\n// holds the base to show the popular movies \r\n\r\nconst MovieList = (props) => {\r\n   \r\n   \r\n    \r\n    \r\n    return (<MyContext.Consumer>\r\n        {\r\n      context=>(\r\n        \r\n            <div className='bg-galaxy min-h-screen'>\r\n                <div className='container flex flex-wrap justify-center min-w-full m-0  px-2 pb-10'>\r\n                    {context.items.map(item=><MovieItem  key={item.id} item={item}/>)\r\n                     }\r\n                </div>\r\n                <div className='flex justify-center'>  \r\n                    <input type='button' value='load more'\r\n                     className='cursor-pointer w-1/2 h-14 mb-10 tracking-widest rounded opacity-70 bg-gray-700 text-gray-400 mt-1 uppercase hover:bg-gray-400 hover:text-gray-700 font-bold text-2xl focus:outline-none '\r\n                     onClick={()=>context.morePage()}/>\r\n                </div>\r\n        </div>\r\n         )\r\n        }\r\n\r\n  </MyContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n\r\n\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":13,"column":15,"nodeType":"62","endLine":19,"endColumn":6},{"ruleId":"60","severity":1,"message":"63","line":19,"column":8,"nodeType":"64","endLine":19,"endColumn":10,"suggestions":"65"},{"ruleId":"60","severity":1,"message":"61","line":21,"column":15,"nodeType":"62","endLine":24,"endColumn":6},{"ruleId":"60","severity":1,"message":"63","line":24,"column":8,"nodeType":"64","endLine":24,"endColumn":10,"suggestions":"66"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":15,"nodeType":"62","endLine":32,"endColumn":6},{"ruleId":"60","severity":1,"message":"67","line":32,"column":8,"nodeType":"64","endLine":32,"endColumn":10,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":55,"column":21,"nodeType":"71","endLine":55,"endColumn":382},{"ruleId":"72","severity":1,"message":"73","line":2,"column":9,"nodeType":"74","messageId":"75","endLine":2,"endColumn":15},{"ruleId":"72","severity":1,"message":"76","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":22},{"ruleId":"72","severity":1,"message":"77","line":1,"column":16,"nodeType":"74","messageId":"75","endLine":1,"endColumn":24},{"ruleId":"72","severity":1,"message":"78","line":1,"column":25,"nodeType":"74","messageId":"75","endLine":1,"endColumn":34},{"ruleId":"72","severity":1,"message":"79","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["82"],["83"],"React Hook useEffect has missing dependencies: 'id' and 'trailerKey'. Either include them or remove the dependency array.",["84"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [id]",{"range":"90","text":"91"},{"range":"92","text":"91"},"Update the dependencies array to be: [id, trailerKey]",{"range":"93","text":"94"},[727,729],"[id]",[935,937],[1230,1232],"[id, trailerKey]"]